{"version":3,"sources":["component/scene.js","component/venueManager.png","component/sceneWrapper/SceneWrapper.js","action.js","component/map/Map.js","component/loginPage/LoginPage.js","component/navbar/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["props","reactCanvas","useRef","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","onSceneReady","rest","useEffect","current","engine","Engine","scene","Scene","isReady","captureMap","onClickRightDialogue","setSuggestion","setText","inputTextValue","setInputTextValue","onReadyObservable","addOnce","runRenderLoop","render","resize","getEngine","window","addEventListener","dispose","removeEventListener","show","ref","img","camera","ArcRotateCamera","Math","PI","Vector3","Zero","canvas","getRenderingCanvas","clearColor","Color3","box","MeshBuilder","CreateBox","height","width","depth","onPointerObservable","add","pointerInfo","type","PointerEventTypes","POINTERDOWN","attachControl","HemisphericLight","intensity","console","log","materialImg","StandardMaterial","diffuseTexture","Texture","text","length","info","outerBox","clone","material","advancedTexture","AdvancedDynamicTexture","CreateForMesh","input1","TextBlock","color","background","fontSize","top","left","addControl","linkWithMesh","createBox","currentMesh","pickinfo","pick","pointerX","pointerY","mesh","hit","pickedMesh","InputText","onTextChangedObservable","e","onTextPasteObservable","createInput","setCaptureMap","id","instance","axios","create","baseURL","getUser","body","get","username","password","then","res","catch","err","error","editPhotos","name","post","Map","state","marker_lat","marker_lng","onMarkerDragEnd","new_lat","latLng","lat","new_lng","lng","setState","captureMapOnClick","html2canvas","document","querySelector","logging","letterRendering","allowTaint","useCORS","toDataURL","saveImage","loggedInUser","data","setImageUpdated","imageUpdated","MapWithAMarker","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","draggable","onDragEnd","position","googleMapURL","loadingElement","style","containerElement","minWidth","borderRadius","mapElement","className","onClick","Component","LoginPage","useState","setUserName","popUp","setPopUp","userNameLength","setUserNameLength","passwordLength","setPasswordLength","setPassword","onSignUpClick","createUser","message","setTimeout","onChange","target","value","userDate","result","setLoggedInUser","setLoginScreen","onSignInClick","NavBar","location","reload","App","userName","loginScreen","image","setImage","venueManager","noOfBoxes","setNoOfBoxes","suggestion","rightDialogueValue","setRightDialogueValue","rightDialogueRef","arrayOfWord","handleClickOutside","contains","filtered","filter","a","includes","border","src","alt","display","flexDirection","padding","boxShadow","overflow","map","margin","cursor","words","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d6de8a7c.chunk.js","sourcesContent":["import { Engine, Scene } from \"@babylonjs/core\";\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\nexport default (props) => {\r\n  const reactCanvas = useRef(null);\r\n  const {\r\n    antialias,\r\n    engineOptions,\r\n    adaptToDeviceRatio,\r\n    sceneOptions,\r\n    onRender,\r\n    onSceneReady,\r\n    ...rest\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    if (reactCanvas.current) {\r\n      const engine = new Engine(\r\n        reactCanvas.current,\r\n        antialias,\r\n        engineOptions,\r\n        adaptToDeviceRatio\r\n      );\r\n      const scene = new Scene(engine, sceneOptions);\r\n\r\n      if (scene.isReady()) {\r\n        onSceneReady(\r\n          scene,\r\n          props.captureMap,\r\n          props.onClickRightDialogue,\r\n          props.setSuggestion,\r\n          props.setText,\r\n          props.inputTextValue,\r\n          props.setInputTextValue\r\n        );\r\n      } else {\r\n        scene.onReadyObservable.addOnce((scene) =>\r\n          onSceneReady(\r\n            scene,\r\n            props.captureMap,\r\n            props.onClickRightDialogue,\r\n            props.setSuggestion,\r\n            props.setText,\r\n            props.inputTextValue,\r\n            props.setInputTextValue\r\n          )\r\n        );\r\n      }\r\n\r\n      engine.runRenderLoop(() => {\r\n        if (typeof onRender === \"function\") {\r\n          onRender(scene);\r\n        }\r\n        scene.render();\r\n      });\r\n\r\n      const resize = () => {\r\n        scene.getEngine().resize();\r\n      };\r\n\r\n      if (window) {\r\n        window.addEventListener(\"resize\", resize);\r\n      }\r\n\r\n      return () => {\r\n        scene.getEngine().dispose();\r\n\r\n        if (window) {\r\n          window.removeEventListener(\"resize\", resize);\r\n        }\r\n      };\r\n    }\r\n  }, [reactCanvas, props.captureMap, props.inputTextValue.show]);\r\n\r\n  return <canvas ref={reactCanvas} {...rest} />;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/venueManager.9d5088c3.png\";","import React, { useEffect, useState } from \"react\";\r\nimport \"pepjs\";\r\nimport {\r\n  FreeCamera,\r\n  Vector3,\r\n  HemisphericLight,\r\n  MeshBuilder,\r\n  ArcRotateCamera,\r\n  StandardMaterial,\r\n  Texture,\r\n  PointLight,\r\n  DirectionalLight,\r\n  Color3,\r\n  PointerEventTypes,\r\n  Mesh,\r\n} from \"@babylonjs/core\";\r\nimport SceneComponent from \"../scene\";\r\nimport venueManager from \"../venueManager.png\";\r\nimport \"./SceneWrapper.css\";\r\nimport { AdvancedDynamicTexture, InputText, TextBlock } from \"babylonjs-gui\";\r\n\r\nlet box;\r\n\r\nconst onSceneReady = (\r\n  scene,\r\n  img,\r\n  onClickRightDialogue,\r\n  setSuggestion,\r\n  setText,\r\n  inputTextValue,\r\n  setInputTextValue\r\n) => {\r\n  // This creates and positions a free camera (non-mesh)\r\n  var camera = new ArcRotateCamera(\r\n    \"camera1\",\r\n    -(Math.PI / 2),\r\n    Math.PI / 2,\r\n    4,\r\n    new Vector3.Zero(1, 1, 0),\r\n    scene\r\n  );\r\n  let left = 40;\r\n  let top = 45;\r\n  const canvas = scene.getEngine().getRenderingCanvas();\r\n  scene.clearColor = new Color3(0.8, 0.8, 0.8);\r\n\r\n  const box = new MeshBuilder.CreateBox(\"box\", {\r\n    height: 1,\r\n    width: 1,\r\n    depth: 0.25,\r\n  });\r\n  scene.onPointerObservable.add((pointerInfo) => {\r\n    switch (pointerInfo.type) {\r\n      case PointerEventTypes.POINTERDOWN:\r\n        onClickRightDialogue(\"\");\r\n        break;\r\n      // case PointerEventTypes.POINTERDOUBLETAP:\r\n      //   createInput(pointerInfo);\r\n      //   break;\r\n    }\r\n  });\r\n\r\n  camera.attachControl(canvas, true);\r\n\r\n  var light = new HemisphericLight(\"light\", new Vector3(1, -1, -2), scene);\r\n  light.intensity = 1;\r\n\r\n  console.log(\"scene consoele\", inputTextValue);\r\n  const createInput = (info) => {\r\n    let advancedTexture = new AdvancedDynamicTexture.CreateForMesh(box);\r\n    let input1 = new InputText();\r\n    input1.width = \"400px\";\r\n    input1.height = \"100px\";\r\n    input1.color = \"white\";\r\n    input1.background = \"grey\";\r\n    input1.fontSize = \"80px\";\r\n    input1.top = `${top}%`;\r\n    input1.left = `${left}%`;\r\n    input1.onTextChangedObservable.add((e) => {\r\n      if (input1.text.length > 0) {\r\n        setText(input1.text);\r\n        // setInputTextValue(input1.text);\r\n        setSuggestion({\r\n          show: true,\r\n          top: \"50vh\",\r\n          left: \"50vw\",\r\n        });\r\n      } else {\r\n        setText(\"\");\r\n        // setInputTextValue(\"\");\r\n        setSuggestion({\r\n          show: false,\r\n        });\r\n      }\r\n      // createBox();\r\n    });\r\n    input1.onTextPasteObservable.add(() => {\r\n      if (inputTextValue.length > 0) {\r\n        input1.text = inputTextValue;\r\n      }\r\n    });\r\n    console.log(input1);\r\n\r\n    advancedTexture.addControl(input1);\r\n    input1.linkWithMesh(box);\r\n  };\r\n\r\n  // add image\r\n  const materialImg = new StandardMaterial(\"materialImg\", scene);\r\n  materialImg.diffuseTexture = new Texture(img, scene);\r\n\r\n  const createBox = (info) => {\r\n    let outerBox = box.clone(\"outerBox\");\r\n    outerBox.material = materialImg;\r\n    let advancedTexture = new AdvancedDynamicTexture.CreateForMesh(outerBox);\r\n\r\n    let input1 = new TextBlock();\r\n    input1.width = \"400px\";\r\n    input1.height = \"100px\";\r\n    input1.color = \"white\";\r\n    input1.background = \"grey\";\r\n    input1.fontSize = \"80px\";\r\n    input1.top = `${top}%`;\r\n    input1.left = `${left}%`;\r\n    input1.text = info;\r\n    console.log(input1);\r\n\r\n    advancedTexture.addControl(input1);\r\n    input1.linkWithMesh(outerBox);\r\n  };\r\n  if (inputTextValue.text.length > 0 && inputTextValue.show) {\r\n    createBox(inputTextValue.text);\r\n    setSuggestion({\r\n      show: false,\r\n    });\r\n  }\r\n\r\n  let innerBox = box.clone(\"innerBox\");\r\n  innerBox.material = materialImg;\r\n\r\n  const process = () => {\r\n    let currentMesh;\r\n    let pickinfo = scene.pick(scene.pointerX, scene.pointerY, function (mesh) {\r\n      return mesh === box;\r\n    });\r\n    if (pickinfo.hit) {\r\n      currentMesh = pickinfo.pickedMesh;\r\n    }\r\n\r\n    if (!currentMesh) return;\r\n    createInput();\r\n    setInputTextValue({ show: false, text: \"\" });\r\n  };\r\n  canvas.addEventListener(\"dblclick\", process);\r\n};\r\n\r\nconst onRender = (scene) => {\r\n  if (box !== undefined) {\r\n    var deltaTimeInMillis = scene.getEngine().getDeltaTime();\r\n\r\n    const rpm = 5;\r\n    box.rotation.y += (rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000);\r\n  }\r\n};\r\n\r\nexport default (props) => {\r\n  return (\r\n    <SceneComponent\r\n      antialias\r\n      onSceneReady={onSceneReady}\r\n      setCaptureMap={props.setCaptureMap}\r\n      captureMap={props.captureMap}\r\n      onClickRightDialogue={props.onClickRightDialogue}\r\n      setText={props.setText}\r\n      inputTextValue={props.inputTextValue}\r\n      setInputTextValue={props.setInputTextValue}\r\n      onRender={onRender}\r\n      setSuggestion={props.setSuggestion}\r\n      id=\"my-canvas\"\r\n    />\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n  baseURL: \"https://google-map-img-be.herokuapp.com/\",\r\n});\r\n\r\nexport const createUser = (body) => {\r\n  return instance\r\n    .post(\"/v1/createUser\", body)\r\n    .then((res) => res)\r\n    .catch((err) => console.error(\"create product error\", err));\r\n\r\n  // dispatch({\r\n  //   type: actionTypes.CREATE_PRODUCT,\r\n  //   payload: {\r\n  //     id: data.id,\r\n  //     name: data.name,\r\n  //     actual_price: data.actual_price,\r\n  //     selling_price: data.selling_price,\r\n  //     quantity_in_hand: data.quantity_in_hand,\r\n  //     created_at: data.created_at,\r\n  //   },\r\n  // });\r\n  // localStorage.setItem(\"cart\",JSON.stringify(getState().cart))\r\n};\r\n\r\nexport const getUser = (body) => {\r\n  return instance\r\n    .get(`/v1/getUser?username=${body.username}&&password=${body.password}`)\r\n    .then((res) => {\r\n      console.log(\"product list api\", res);\r\n      return res;\r\n    })\r\n    .catch((err) => console.error(\"create product error\", err));\r\n};\r\nexport const deleteUser = (body) => {\r\n  return instance\r\n    .post(\"/v1/deleteUser\", body)\r\n    .then((res) => {\r\n      console.log(\"product delete api\", res);\r\n      return res;\r\n    })\r\n    .catch((err) => console.error(\"delete product error\", err));\r\n};\r\nexport const editPhotos = (name, body) => {\r\n  return instance\r\n    .post(`/v1/editPhotos?username=${name}`, body)\r\n    .then((res) => {\r\n      console.log(\"on edit click api\", res);\r\n      return res;\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"create product error\", err);\r\n      return err;\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport html2canvas from \"html2canvas\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} from \"react-google-maps\";\r\nimport \"./Map.css\";\r\nimport { ThinMaterialHelper, TimerState } from \"@babylonjs/core\";\r\nimport { editPhotos } from \"../../action\";\r\n\r\nexport default class Map extends Component {\r\n  state = {\r\n    marker_lat: 13.0827,\r\n    marker_lng: 80.2376,\r\n    img: \"\",\r\n  };\r\n\r\n  onMarkerDragEnd = (e) => {\r\n    let new_lat = e.latLng.lat();\r\n    let new_lng = e.latLng.lng();\r\n    this.setState({ marker_lat: new_lat, marker_lng: new_lng });\r\n  };\r\n\r\n  captureMapOnClick = () => {\r\n    html2canvas(document.querySelector(\"#map-container\"), {\r\n      logging: true,\r\n      letterRendering: 1,\r\n      allowTaint: false,\r\n      useCORS: true,\r\n    }).then((canvas) => {\r\n      this.props.setCaptureMap(canvas.toDataURL(\"image/webp\"));\r\n    });\r\n  };\r\n\r\n  saveImage = (e) => {\r\n    let name = this.props.loggedInUser.username;\r\n    let body = {\r\n      text: \"edit\",\r\n      img: this.props.captureMap,\r\n    };\r\n    console.log(\"saveimage clicked\");\r\n    editPhotos(name, body).then((res) =>\r\n      this.setState({ img: res.data.res.img }, () =>\r\n        this.props.setImageUpdated(!this.props.imageUpdated)\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const MapWithAMarker = withScriptjs(\r\n      withGoogleMap((props) => (\r\n        <GoogleMap\r\n          defaultZoom={8}\r\n          defaultCenter={{\r\n            lat: this.state.marker_lat,\r\n            lng: this.state.marker_lng,\r\n          }}\r\n        >\r\n          <Marker\r\n            draggable={true}\r\n            onDragEnd={this.onMarkerDragEnd}\r\n            position={{\r\n              lat: this.state.marker_lat,\r\n              lng: this.state.marker_lng,\r\n            }}\r\n          />\r\n        </GoogleMap>\r\n      ))\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <div id=\"map-container\">\r\n          <MapWithAMarker\r\n            googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAMG_RDX0SnmkWUy7vBSMURe7n15q0q6aA&v=3.exp&libraries=geometry,drawing,places\"\r\n            loadingElement={<div style={{ height: `100%`, width: \"100%\" }} />}\r\n            containerElement={\r\n              <div\r\n                style={{\r\n                  height: `300px`,\r\n                  minWidth: \"400px\",\r\n                  borderRadius: \"8px\",\r\n                }}\r\n              />\r\n            }\r\n            mapElement={\r\n              <div\r\n                style={{ height: `100%`, width: \"100%\", borderRadius: \"8px\" }}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"map_buttons\">\r\n          <button\r\n            className=\"capture_button\"\r\n            onClick={() => this.captureMapOnClick()}\r\n          >\r\n            Capture\r\n          </button>\r\n\r\n          <button className=\"save_button\" onClick={() => this.saveImage()}>\r\n            Save Image\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { createUser, getUser } from \"../../action\";\r\nimport \"./LoginPage.css\";\r\nexport const LoginPage = (props) => {\r\n  const [username, setUserName] = useState(\"\");\r\n  const [popUp, setPopUp] = useState(\"\");\r\n  const [userNameLength, setUserNameLength] = useState(false);\r\n  const [passwordLength, setPasswordLength] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const onChangeUserName = (e) => {\r\n    setUserName(e.target.value);\r\n  };\r\n  const onChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const onSignUpClick = () => {\r\n    if (username.length > 2 && password.length > 4) {\r\n      console.log(\"sign up clicked\", username, password);\r\n      let body = {\r\n        username: username,\r\n        password: password,\r\n      };\r\n      createUser(body).then((res) => {\r\n        if (res.data.message === \"Success\") setPopUp(\"created\");\r\n      });\r\n    } else {\r\n      if (username.length < 3) {\r\n        setUserNameLength(true);\r\n      }\r\n      if (password.length < 5) {\r\n        setPasswordLength(true);\r\n      }\r\n    }\r\n  };\r\n  const onSignInClick = () => {\r\n    let body = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    console.log(\"signin\", body);\r\n    getUser(body)\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          let userDate = {\r\n            username: res.data.result.username,\r\n            password: res.data.result.password,\r\n            img: res.data.result.img,\r\n          };\r\n          props.setLoggedInUser(userDate);\r\n          props.setLoginScreen(false);\r\n        } else setPopUp(\"no_user\");\r\n      })\r\n      .catch((err) => console.log(\"login error\", err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (popUp === \"creted\" || popUp === \"no_user\") {\r\n      setTimeout(() => {\r\n        setPopUp(\"\");\r\n      }, 700);\r\n    }\r\n  }, [popUp]);\r\n  return (\r\n    <div className=\"backdrop\">\r\n      <div className=\"login_container\">\r\n        <div>\r\n          <span>\r\n            <span>User Name</span>\r\n            <input onChange={onChangeUserName} />\r\n          </span>\r\n          {userNameLength && (\r\n            <span className=\"error\">Enter atleast 3 characters</span>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <span>Password</span>\r\n            <input type=\"password\" onChange={onChangePassword} />\r\n          </span>\r\n          {passwordLength && (\r\n            <span className=\"error\">Enter atleast 5 characters</span>\r\n          )}\r\n        </div>\r\n        <div className=\"login_button_contianer\">\r\n          <button onClick={() => onSignUpClick()}>Sign Up</button>\r\n          <button onClick={() => onSignInClick()}>Sign In</button>\r\n        </div>\r\n      </div>\r\n      {popUp !== \"\" && (\r\n        <div className=\"success_popup\">\r\n          {popUp === \"created\" && \"USER CREATED, Login to continue\"}\r\n          {popUp === \"no_user\" && \"User not found\"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nexport const NavBar = () => {\r\n  const onSignOutClick = () => {\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <nav>\r\n      <span className=\"logo\">snaptrude</span>\r\n      <button onClick={onSignOutClick}>Sign Out</button>\r\n    </nav>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useRef } from \"react\";\nimport SceneWrapper from \"./component/sceneWrapper/SceneWrapper\";\nimport \"./App.css\";\nimport { getUser } from \"./action\";\nimport venueManager from \"./component/venueManager.png\";\nimport Map from \"./component/map/Map\";\nimport { LoginPage } from \"./component/loginPage/LoginPage\";\nimport { NavBar } from \"./component/navbar/NavBar\";\nimport { shadowMapFragment } from \"@babylonjs/core/Shaders/ShadersInclude/shadowMapFragment\";\n\nconst App = () => {\n  const [userName, setUserName] = useState();\n  const [loginScreen, setLoginScreen] = useState(true);\n  const [image, setImage] = useState();\n  const [loggedInUser, setLoggedInUser] = useState({});\n  const [imageUpdated, setImageUpdated] = useState(true);\n  const [captureMap, setCaptureMap] = useState(venueManager);\n  const [noOfBoxes, setNoOfBoxes] = useState(0);\n  const [text, setText] = useState(\"\");\n  const [inputTextValue, setInputTextValue] = useState({\n    show: false,\n    text: \"\",\n  });\n  const [suggestion, setSuggestion] = useState({\n    show: false,\n    top: 0,\n    left: 0,\n  });\n  const [rightDialogueValue, setRightDialogueValue] = useState(\"\");\n  const rightDialogueRef = useRef(null);\n\n  let arrayOfWord = [\n    \"searching\",\n    \"text\",\n    \"copy\",\n    \"paste\",\n    \"image\",\n    \"pixel\",\n    \"working\",\n  ];\n\n  const handleClickOutside = (e) => {\n    if (\n      rightDialogueRef.current !== null &&\n      !rightDialogueRef.current.contains(e.target)\n    ) {\n      setRightDialogueValue(\"\");\n      setText(\"\");\n    }\n  };\n\n  // const handleClickInside = () => setClickedOutside(false);\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  });\n  useEffect(() => {\n    console.log(\"suggestion\", suggestion);\n  }, [suggestion]);\n\n  useEffect(() => {\n    console.log(\"number of boxes\", noOfBoxes);\n  }, [noOfBoxes]);\n\n  useEffect(() => {\n    console.log(\"input t ext value\", inputTextValue);\n  }, [inputTextValue]);\n  useEffect(() => {\n    if (!loginScreen) {\n      let body = {\n        username: loggedInUser.username,\n        password: loggedInUser.password,\n      };\n      getUser(body).then((res) => {\n        console.log(\"user data\", res);\n        setUserName(res.data.result.username);\n        setImage(res.data.result.img);\n      });\n    }\n  }, [imageUpdated, loginScreen]);\n\n  const onClickRightDialogue = (e) => {\n    setRightDialogueValue(e);\n  };\n  let filtered = arrayOfWord.filter((a) => a.includes(text));\n  return (\n    <div className=\"app\">\n      {loginScreen ? (\n        <LoginPage\n          setLoginScreen={setLoginScreen}\n          setLoggedInUser={setLoggedInUser}\n        />\n      ) : (\n        <>\n          <NavBar />\n          <div className=\"base_wrapper\">\n            {/* <div className=\"map\">\n              <Map\n                loggedInUser={loggedInUser}\n                setCaptureMap={setCaptureMap}\n                captureMap={captureMap}\n                setImageUpdated={setImageUpdated}\n                imageUpdated={imageUpdated}\n              />\n              <div className=\"details_container\">\n                <span>\n                  User: <span>{userName}</span>{\" \"}\n                </span>\n                <span>\n                  {\" \"}\n                  Saved image:{\" \"}\n                  {\n                    <img\n                      src={image}\n                      alt=\"user_map_image\"\n                      style={{ width: \"100px\", height: \"100px\" }}\n                    />\n                  }\n                </span>\n\n                <span>No of boxes : {noOfBoxes}</span>\n                <button onClick={onSignOutClick}>Sign Out</button>\n              </div>\n            </div> */}\n            <div className=\"scene\">\n              <div className=\"right_controls\">\n                <span\n                  style={{\n                    border:\n                      rightDialogueValue === \"map\"\n                        ? \"1px solid black\"\n                        : \"1px solid transparent\",\n                  }}\n                  onClick={() => onClickRightDialogue(\"map\")}\n                >\n                  Map\n                </span>\n                <span\n                  style={{\n                    border:\n                      rightDialogueValue === \"account\"\n                        ? \"1px solid black\"\n                        : \"1px solid transparent\",\n                  }}\n                  onClick={() => onClickRightDialogue(\"account\")}\n                >\n                  Acc.\n                </span>\n              </div>\n\n              {rightDialogueValue === \"map\" && (\n                <>\n                  <div className=\"map_dialogue_box\" ref={rightDialogueRef}>\n                    <div>\n                      <Map\n                        loggedInUser={loggedInUser}\n                        setCaptureMap={setCaptureMap}\n                        captureMap={captureMap}\n                        setImageUpdated={setImageUpdated}\n                        imageUpdated={imageUpdated}\n                      />\n                    </div>\n                  </div>\n                </>\n              )}\n              {rightDialogueValue === \"account\" && (\n                <>\n                  <div className=\"map_dialogue_box\" ref={rightDialogueRef}>\n                    <div className=\"details_container\">\n                      <span>\n                        User: <span>{userName}</span>{\" \"}\n                      </span>\n                      <span className=\"details_contianer_img\">\n                        {\" \"}\n                        Saved image:{\" \"}\n                        {\n                          <img\n                            src={image}\n                            alt=\"user_map_image\"\n                            style={{ width: \"100px\", height: \"100px\" }}\n                          />\n                        }\n                      </span>\n\n                      <span>No of boxes : {noOfBoxes}</span>\n                    </div>\n                  </div>\n                </>\n              )}\n              <div className=\"scene_wrapper\">\n                {suggestion.show && filtered.length > 0 && (\n                  <span\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      position: \"absolute\",\n                      top: suggestion.top,\n                      left: suggestion.left,\n                      background: \"#ffffff\",\n                      width: 200,\n                      padding: \"10px\",\n                      borderRadius: 10,\n                      boxShadow: \"0 3px 10px rgba(0,0,0,0.2)\",\n                      height: 150,\n                      overflow: \"scroll\",\n                    }}\n                  >\n                    {filtered.map((a) => (\n                      <span\n                        onClick={() => {\n                          setInputTextValue({ text: a, show: true });\n                        }}\n                        style={{\n                          background: \"#f3f3f3\",\n                          margin: \"10px 0\",\n                          cursor: \"pointer\",\n                        }}\n                      >\n                        {a}\n                      </span>\n                    ))}\n                  </span>\n                )}\n                <SceneWrapper\n                  captureMap={captureMap}\n                  words={arrayOfWord}\n                  setSuggestion={setSuggestion}\n                  setCaptureMap={setCaptureMap}\n                  setNoOfBoxes={setNoOfBoxes}\n                  inputTextValue={inputTextValue}\n                  setInputTextValue={setInputTextValue}\n                  setText={setText}\n                  noOfBoxes={noOfBoxes}\n                  onClickRightDialogue={onClickRightDialogue}\n                />\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}